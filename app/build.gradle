apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.compiledSdk
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId ApplicationId.id
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Release.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"01c5d0d1ff15325934327ab3965e26f6\""
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${Versions.kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:${Versions.kotlin_version}"
    implementation AndroidLibraries.appCompact
    implementation AndroidLibraries.coreKtx
    implementation AndroidLibraries.constraintLayout
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test:core:1.2.0"
    androidTestImplementation "androidx.test:rules:1.2.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.2.0"
    testImplementation "org.mockito:mockito-core:3.1.0"
    androidTestImplementation "org.mockito:mockito-android:3.1.0"
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.21.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${Versions.kotlin_version}"
    testImplementation "android.arch.core:core-testing:1.1.1"
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'

    implementation AndroidLibraries.dagger
    implementation AndroidLibraries.daggerAndroid
    implementation AndroidLibraries.daggerAndroidSupport
    kapt AndroidLibraries.daggerAnnotation
    kapt AndroidLibraries.daggerProcessor

    implementation AndroidLibraries.lifecycleExtensions
    implementation AndroidLibraries.lifecycleViewModel

    implementation AndroidLibraries.retrofit
    implementation AndroidLibraries.retrofitGsonConverter
    implementation AndroidLibraries.retrofitRxAdapter
    implementation AndroidLibraries.httpLoggingInterceptor
    implementation AndroidLibraries.gson
    implementation AndroidLibraries.coroutine

    implementation AndroidLibraries.material
    implementation AndroidLibraries.rxRoom

    implementation AndroidLibraries.glide
    kapt AndroidLibraries.glideCompiler

    implementation AndroidLibraries.anko

//    Room
    implementation 'androidx.room:room-runtime:2.2.1'
    kapt 'androidx.room:room-compiler:2.2.1'
    implementation "androidx.room:room-ktx:2.2.1"

//    Paging
    implementation 'androidx.paging:paging-runtime-ktx:2.1.0'
}
